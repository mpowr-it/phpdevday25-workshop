# ExternalSecret that pulls fields from Vault KV and constructs the CNPG app secret.
# We bring in discrete fields (username/password/database/host/port),
# then compose URI/JDBC-URI via template. CNPG will pick up password changes
# because of the cnpg.io/reload label on the target secret.
---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: beta-pg-app-es
  namespace: int-app-beta
spec:
  refreshInterval: 1h
  secretStoreRef:
    kind: SecretStore
    name: vault
  target:
    name: beta-pg-app
    creationPolicy: Owner
    deletionPolicy: Retain
    template:
      engineVersion: v2
      metadata:
        labels:
          cnpg.io/reload: "true"
      data:
        username: "{{ .username }}"
        database: "{{ .database }}"
        password: "{{ .password }}"
        uri: "postgresql://{{ .username }}:{{ .password }}@beta-pg-rw.int-app-beta.svc.cluster.local:{{ .port }}/{{ .database }}"
        jdbc-uri: "jdbc:postgresql://beta-pg-rw.int-app-beta.svc.cluster.local:{{ .port }}/{{ .database }}?user={{ .username }}&password={{ .password }}"
  data:
    - secretKey: username
      remoteRef: { key: app/config, property: username }
    - secretKey: password
      remoteRef: { key: app/config, property: password }
    - secretKey: database
      remoteRef: { key: app/config, property: database }
    - secretKey: host
      remoteRef: { key: app/config, property: host }
    - secretKey: port
      remoteRef: { key: app/config, property: port }
